FROM cprates/lws_base:latest as builder

WORKDIR /lws
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo ./cmd/gobox


FROM alpine:3.10

ENV GLIBC_VERSION 2.27-r0

# this should go on a base image
RUN set -x \
    && apk add --update wget ca-certificates libstdc++ \
    && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \
    &&  wget "https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/glibc-$GLIBC_VERSION.apk" \
    &&  apk --no-cache add "glibc-$GLIBC_VERSION.apk" \
    &&  rm "glibc-$GLIBC_VERSION.apk" \
    &&  wget "https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/glibc-bin-$GLIBC_VERSION.apk" \
    &&  apk --no-cache add "glibc-bin-$GLIBC_VERSION.apk" \
    &&  rm "glibc-bin-$GLIBC_VERSION.apk" \
    &&  wget "https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/glibc-i18n-$GLIBC_VERSION.apk" \
    &&  apk --no-cache add "glibc-i18n-$GLIBC_VERSION.apk" \
    && rm "glibc-i18n-$GLIBC_VERSION.apk"


# Install gobox
WORKDIR /

COPY --from=builder /lws/gobox /bin
COPY cmd/runbox/init.sh .

RUN mkdir /app \
    && apk del wget \
    && rm /var/cache/apk/*
